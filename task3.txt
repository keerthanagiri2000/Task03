1.For the given JSON iterate over all for loops (for, for in, for of, forEach)
   for
   Answer;
       var arr = [ {"id":"10", "class": "child-of-9"}, {"id":"11", "class": "child-of-10"}];
    
       for (var i = 0; i < arr.length; i++){
       document.write("<br><br>array index: " + i);
       var obj = arr[i];
       for (var key in obj){
          var value = obj[key];
         document.write("<br> - " + key + ": " + value);

  for in
  Answer;
       let obj = {
               key1: "value1",
               key2: "value2",
               key3: "value3"
       }
       for (let key in obj) {
         let value = obj[key];
         console.log(key, value);
   }

   for of
   Answer;
       var p = {
           0: "value1",
        "b": "value2",
        key: "value3"
     };

      for (var key of Object.keys(p)) {
      console.log(key + " -> " + p[key])
    }

  foreach
  Answer;
    var obj = {
           first: "pen",
           last: "cil"
   };
   Object.keys(obj).forEach(function(key) {
     console.log(key, obj[key]);
  });


2.Create your own resume data in JSON format
   Answer;
{
  "basics": {
         "name"    : "keerthana G",
         "email"    : "keerthanagiri2000@gmail.com",
         "phone"   : "7708902184",
         "location": {
         "address"         : "1/41c,Avinashi",
         "postalCode"   : "641654",
         "city"               : "Tiruppur",
         "countryCode": "+91",
         "region"           : "Tamilnadu",
         "country          : "India"
  },
  "education":  {
         "institution"    : "sasurie college of engineering",
         "studyType"   : "Bachelor",
         "course"         : "Electrical and Electronics Engineering",
         "startDate"     : "01-08-2017",
         "endDate"      : "01-08-2021",
         "cgpa"            : "7.56"
  },
  "projects": { 
         "name"           : "Preclusion of LPG gas effusion system",
         "description"  : "To monitor to safely detecting any malfunctions of a pressurized gas system"
  },
  "languages": [{
         "language1"     : "English",
         "fluency1"       : "Professional proficiency",
         "language2"     : "Tamil",
         "fluency2"       : "Native proficiency"
  }],
  "activities":{
         "name"            : "Paper presentation",
         "description"   : "Foot step power generation"
  },
  "skills" :[{
         "name"            : "Web development",
         "keywords"     : [
                                    "html5",
                                    "css3",
                                    "javascript"
                                   ]
  }],
}
       
3.Read about the difference between window, screen and document in javascript
Answer;
   window
   * Each browser tab has its own top-level window object.
   * Each <iframe> (and deprecated <frame>) element has its own window object too, nested within a parent window.
   * Each of these windows gets its own separate global object. window.window always refers to window, but window.parent 
      and window.top might refer to enclosing windows, giving access to other execution contexts.   
   * setTimeout() and setInterval() binding event handlers to a timer
   * location giving the current URL
   * history with methods back() and forward() giving the tab's mutable history
   * navigator describing the browser software

   document
   * Each window object has a document object to be rendered.
   * These objects get confused in part because HTML elements are added to the global object when assigned a unique id. E.g., in 
      the HTML snippet.
   * <body>
           <p id="demo"> This is the first paragraph.</p>
      </body>
   * The paragraph element can be referenced by any of the following:
      *window.demo or window["demo"]
      *document.getElementById("demo")
      *document.querySelector("#demo")
      *document.body.firstChild
      *document.body.children[0]

    screen
    * The window object also has a screen object with properties describing the physical display:
       *screen properties width and height are the full screen
       *screen properties availWidth and availHeight omit the toolbar
    * The portion of a screen displaying the rendered document is the viewport in JavaScript, which is potentially confusing because 
       we call an application's portion of the screen a window when talking about interactions with the operating system. 
    * The getBoundingClientRect() method of any document element will return an object with top, left, bottom, and right properties 
       describing the location of the element in the viewport.
  

